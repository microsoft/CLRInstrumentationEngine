<!-- Copyright (c) Microsoft Corporation. All rights reserved.
     Licensed under the MIT License. -->
<Project>
  <PropertyGroup>
    <SubComponent>Tools\Attach</SubComponent>
  </PropertyGroup>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), 'EnlistmentRoot.marker'))\build\Managed.props" />
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <AssemblyName>Microsoft.InstrumentationEngine.Attach</AssemblyName>
    <RootNamespace>Microsoft.InstrumentationEngine</RootNamespace>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <Nullable>Enable</Nullable>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>
  <ItemGroup>
    <XsdSchemaFile Include="InstrumentationConfigurationSources.xsd">
      <Namespace>Microsoft.InstrumentationEngine</Namespace>
      <SubType>Designer</SubType>
      <Visible>False</Visible>
      <OutputFile>$(MSBuildThisFileDirectory)\%(FileName).cs</OutputFile>
      <Language>CS</Language>
    </XsdSchemaFile>
    <XsdSchemaFile Include="EngineConfiguration.xsd">
      <Namespace>Microsoft.InstrumentationEngine</Namespace>
      <SubType>Designer</SubType>
      <Visible>False</Visible>
      <OutputFile>$(MSBuildThisFileDirectory)\%(FileName).cs</OutputFile>
      <Language>CS</Language>
    </XsdSchemaFile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="InstrumentationConfigurationSources.xsd" />
    <EmbeddedResource Include="EngineConfiguration.xsd" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Diagnostics.NETCore.Client" Version="0.2.61701" />
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta1.20104.2" />
  </ItemGroup>
  <Import Project="$(EnlistmentRoot)\build\Managed.targets" />
  <Target Name="XsdGeneration" AfterTargets="PrepareForBuild" Inputs="@(XsdSchemaFile)" Outputs="@(XsdSchemaFile.OutputFile)" Condition="'@(XsdSchemaFile)' != ''">
    <Error Condition="'%(XsdSchemaFile.Namespace)' == ''" Text="Missing Namespace attribute for XsdSchemaFile %(XsdSchemaFile.FullPath)" />
    <PropertyGroup>
      <XsdToolPath Condition = "!Exists('$(XsdToolPath)')">$(MSBuildProgramFiles32)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\xsd.exe</XsdToolPath>
      <XsdToolPath Condition = "!Exists('$(XsdToolPath)')">$(ProgramFiles)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\xsd.exe</XsdToolPath>
    </PropertyGroup>
    <Error Condition="!Exists('$(XsdToolPath)')" Text="Unable to locate xsd.exe tool." />
    <Exec Command="&quot;$(XsdToolPath)&quot; &quot;%(XsdSchemaFile.FullPath)&quot; /classes /namespace:%(XsdSchemaFile.Namespace) /language:%(XsdSchemaFile.Language) /out:$(MSBuildThisFileDirectory)" />
  </Target>
  <ItemGroup>
    <!-- dotnet core 3.1 produces both a dll and exe -->
    <FilesToSign Include="$(OutputPath)\Microsoft.InstrumentationEngine.Attach.exe"/>
  </ItemGroup>
</Project>

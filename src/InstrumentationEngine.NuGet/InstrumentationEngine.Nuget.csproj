<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation. All rights reserved.
      -->
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), 'EnlistmentRoot.marker'))\build\Common.props" />
  <PropertyGroup>
    <Configurations>Debug;Release</Configurations>
    <Platforms>x86,x64</Platforms>
    <ProjectGuid>{0B12FD8F-83DE-4A80-9BC1-ABE67E0E808A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Microsoft.Diagnostics.InstrumentationEngine.NuGet</RootNamespace>
    <AssemblyName>Microsoft.Diagnostics.InstrumentationEngine.NuGet</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <!-- Suppress the "CS2008: No source files specified" warning -->
    <NoWarn>2008</NoWarn>
    <CopyBuildOutputToOutputDirectory>false</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>false</CopyOutputSymbolsToOutputDirectory>
  </PropertyGroup>
  <ItemGroup>
    <NugetSpec Include="InstrumentationEngine.nuspec">
      <SubType>Designer</SubType>
    </NugetSpec>
  </ItemGroup>
  <ItemGroup>
    <None Include="install.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <!-- Extensions host -->
  <Choose>
    <When Condition="'$(PlatformOS)'=='Linux'">
      <!-- Building Nuget for Linux is only supported on VSTS The following properties must be set by the build -->
      <!--NuGetBinInput-->
      <PropertyGroup>
        <NugetSuffix>$(Platform)_$(LinuxDistro)</NugetSuffix>
      </PropertyGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Content Include="$(BinRoot)\$(Configuration)\$(Platform)\Microsoft.InstrumentationEngine.ExtensionsHost_$(Platform).dll">
          <Link>InstrumentationEngine\$(Platform)\Microsoft.InstrumentationEngine.ExtensionsHost_$(Platform).dll</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(BinRoot)\$(Configuration)\$(Platform)\Microsoft.InstrumentationEngine.ExtensionsHost_$(Platform).pdb">
          <Link>InstrumentationEngine\$(Platform)\Microsoft.InstrumentationEngine.ExtensionsHost_$(Platform).pdb</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(BinRoot)\$(Configuration)\$(Platform)\Microsoft.InstrumentationEngine.Extensions.config">
          <Link>InstrumentationEngine\$(Platform)\Microsoft.InstrumentationEngine.Extensions.config</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(BinRoot)\$(Configuration)\$(Platform)\Microsoft.InstrumentationEngine.Extensions.Base_$(Platform).dll">
          <Link>InstrumentationEngine\$(Platform)\Microsoft.InstrumentationEngine.Extensions.Base_$(Platform).dll</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(BinRoot)\$(Configuration)\$(Platform)\Microsoft.InstrumentationEngine.Extensions.Base_$(Platform).pdb">
          <Link>InstrumentationEngine\$(Platform)\Microsoft.InstrumentationEngine.Extensions.Base_$(Platform).pdb</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(BinRoot)\$(Configuration)\AnyCPU\Microsoft.Diagnostics.Instrumentation.Extensions.Base.dll">
          <Link>InstrumentationEngine\$(Platform)\Microsoft.Diagnostics.Instrumentation.Extensions.Base.dll</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(BinRoot)\$(Configuration)\AnyCPU\Microsoft.Diagnostics.Instrumentation.Extensions.Base.pdb">
          <Link>InstrumentationEngine\$(Platform)\Microsoft.Diagnostics.Instrumentation.Extensions.Base.pdb</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(BinRoot)\$(Configuration)\$(Platform)\MicrosoftInstrumentationEngine_$(Platform).dll">
          <Link>InstrumentationEngine\$(Platform)\MicrosoftInstrumentationEngine_$(Platform).dll</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="$(BinRoot)\$(Configuration)\$(Platform)\MicrosoftInstrumentationEngine_$(Platform).pdb">
          <Link>InstrumentationEngine\$(Platform)\MicrosoftInstrumentationEngine_$(Platform).pdb</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
      </ItemGroup>
      <PropertyGroup>
        <NugetBinInput>$(BinRoot)\$(Configuration)\$(Platform)\InstrumentationEngine</NugetBinInput>
        <NugetSuffix>$(Platform)</NugetSuffix>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), EnlistmentRoot.marker))\build\Common.targets" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="BuildNugetPackages" AfterTargets="AfterBuild">
    <ItemGroup>
      <OldNupkg Include="$(PackageOutputDir)\*.nupkg" />
    </ItemGroup>
    <!-- Delete old packages -->
    <Delete Files="@(OldNupkg)" />
    <MSBuild Projects="$(MSBuildProjectFile)" Properties="NugetSpecification=%(NugetSpec.Identity)" Targets="PackNuget">
    </MSBuild>
  </Target>
  <Target Name="PackNuget">
    <PropertyGroup>
      <PackageCommand>..\..\nuget.exe pack "$(ProjectDir)$(NugetSpecification)" -Properties "version=$(PackageVersion);authors=$(PackageAuthors);configuration=$(Configuration);platform=$(Platform);bindir=$(NugetBinInput);scriptdir=$(MSBuildProjectDirectory);suffix=$(NugetSuffix)" -OutputDirectory $(OutDir) -verbosity detailed</PackageCommand>
    </PropertyGroup>
    <Exec Command="$(PackageCommand)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
  </Target>
</Project>
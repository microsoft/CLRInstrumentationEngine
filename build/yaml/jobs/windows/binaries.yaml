# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Job Template: Build Windows Binaries

parameters:
  IndexSources: false
  PublishSymbols: false
  PublishFiles: true
  SignType: None
  IsMicroBuildInternal: false
  MatrixStrategy: {}
  CopyFilters: |
    **

jobs:
- job: Windows
  displayName: Windows

  strategy:
    matrix:
      ${{ insert }}: ${{ parameters.MatrixStrategy }}

  pool:
    ${{ if eq('true', parameters.IsMicroBuildInternal) }}:
      name: VSEngSS-MicroBuild2022-1ES
      demands:
      - msbuild
      - vstest
    ${{ if not(eq('true', parameters.IsMicroBuildInternal)) }}:
      vmImage: windows-2022

  workspace:
    clean: outputs

  steps:
  - checkout: self
    clean: true
  
  - task: CodeQL3000Init@0
    inputs:
      Enabled: $[eq(variables['Build.SourceBranch'], 'refs/heads/dev/willxie/static2')]

  - template: ../../steps/azuredevops/usedotnet.yaml

  - ${{ if eq('true', parameters.IsMicroBuildInternal) }}:
    - template: ../../steps/microbuild/signing.yaml
      parameters:
        SignType: ${{ parameters.SignType }}

  - template: ../../steps/windows/binaries.yaml
    parameters:
      IsMicroBuildInternal: ${{ parameters.IsMicroBuildInternal }}

  - task: CodeQL3000Finalize@0
    condition: always()

  - ${{ if eq('true', parameters.IsMicroBuildInternal) }}:
    - template: ../../steps/microbuild/codesignverify.yaml
      parameters:
        SignType: ${{ parameters.SignType }}

  - ${{ if eq('true', parameters.IndexSources) }}:
    - template: ../../steps/azuredevops/symbols.yaml
      parameters:
        PublishSymbols: ${{ parameters.PublishSymbols }}

  - ${{ if eq('true', parameters.PublishFiles) }}:
    - template: ../../steps/azuredevops/publishbuildartifacts.yaml
      parameters:
        PathToPublish: '$(Build.ArtifactStagingDirectory)\logs'
        ArtifactName: 'logs'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)\bin\$(Configuration)Filtered'
      inputs:
        SourceFolder: '$(Build.ArtifactStagingDirectory)\bin\$(Configuration)'
        Contents: ${{ parameters.CopyFilters }}
        TargetFolder: '$(Build.ArtifactStagingDirectory)\bin\$(Configuration)Filtered'
        CleanTargetFolder: true
        OverWrite: true

    - template: ../../steps/azuredevops/publishbuildartifacts.yaml
      parameters:
        PathToPublish: '$(Build.ArtifactStagingDirectory)\bin\$(Configuration)Filtered'
        ArtifactName: 'binaries-windows-$(Configuration)'

  - ${{ if eq('true', parameters.IsMicroBuildInternal) }}:
    - template: ../../steps/microbuild/cleanup.yaml

  - template: ../../steps/azuredevops/componentgovernance.yaml


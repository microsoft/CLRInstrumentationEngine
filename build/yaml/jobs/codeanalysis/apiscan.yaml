# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Job Template: Run APIScan Code Analysis
# Invokes APIScan analysis

jobs:
- job: CodeAnaysis_APIScan
  displayName: Code Analysis - APIScan

  timeoutInMinutes: 360

  # No dependencies. Requires Build Stages to ensure that binaries are built

  pool:
    name: VSEngSS-MicroBuild2019

  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true

  - task: DownloadBuildArtifacts@0
    displayName: Download Windows Files (Release)
    inputs:
      downloadType: single
      artifactName: binaries-windows-Release
      downloadPath: $(Build.ArtifactStagingDirectory)

  # Scan only native files that are released as part of the product.
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)\ApiScan'
    inputs:
      SourceFolder: $(Build.ArtifactStagingDirectory)\binaries-windows-Release
      Contents: |
        **\?(*.pdb|*.dll|*.exe)
        !**\AnyCPU\**
        !**\RawProfilerHook.Tests\**
        !**\Intercept.Latest.Tests\**
        !**\Intercept.2.0.1.Tests\**
        !**\Tools\**
        !**\*Nagler*
        !**\*Test*
      TargetFolder: '$(Build.ArtifactStagingDirectory)\ApiScan'

  # Run API Scan
  - task: securedevelopmentteam.vss-secure-development-tools.build-task-apiscan.APIScan@2
    displayName: 'Run APIScan'
    inputs:
      softwareFolder: '$(Build.ArtifactStagingDirectory)\ApiScan'
      softwareName: ClrInstrumentationEngine
      softwareVersionNum: '$(Build.BuildNumber)'
      symbolsFolder: 'SRV*http://symweb;$(Build.ArtifactStagingDirectory)/ApiScan'
      isLargeApp: false
    continueOnError: true

  # Publish SecurityAnalysis Logs
  - template: ../../steps/codeanalysis/publishreports.yaml
    parameters:
      ArtifactName: ApiScan

  - template: ../../steps/codeanalysis/filebugs.yaml
    parameters:
      BuildName: ApiScan
      Tags: CLRIEApiScan
      
  # Microbuild Cleanup
  - template: ../../steps/microbuild/cleanup.yaml

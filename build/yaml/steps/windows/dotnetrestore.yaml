# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Step Template: Restore NuGet Packages

parameters:
  Solution: ''
  BinLogCategory: ''
  IsMicroBuildInternal: false

steps:
# NuGet Credential Provider Issue: https://github.com/microsoft/artifacts-credprovider/issues/91#issuecomment-530907753
- task: NuGetCommand@2
  displayName: 'Clear Local Cache'
  inputs:
    command: 'custom'
    arguments: 'locals http-cache -Clear'

- task: PowerShell@2
  displayName: 'Set NUGET_PLUGIN Env Vars'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "##vso[task.setvariable variable=NUGET_PLUGIN_HANDSHAKE_TIMEOUT_IN_SECONDS]20"
      Write-Host "##vso[task.setvariable variable=NUGET_PLUGIN_REQUEST_TIMEOUT_IN_SECONDS]20"

- task: NuGetAuthenticate@1
  inputs:
    forceReinstallCredentialProvider: true

  # 'command: restore' does not take additional arguments, thus set
  # 'command: custom' and 'custom: restore' which then requires setting
  # of all arguments.
- task: DotNetCoreCLI@2
  displayName: Restore ${{ parameters.Solution }}
  inputs:
    command: custom
    custom: restore
    arguments: >-
      $(Build.SourcesDirectory)\${{ parameters.Solution }}
      --configfile
      $(Build.SourcesDirectory)\NuGet.Config
      -bl:"$(Build.ArtifactStagingDirectory)\logs\${{ parameters.BinLogCategory }}_Windows_$(Platform)_$(Configuration)_Restore.binlog"
  condition: and(succeeded(), eq(variables['Platform'], 'Any CPU'))

# We can only restore from the internal config on internal build machines.
- ${{ if eq('true', parameters.IsMicroBuildInternal) }}:
  - task: DotNetCoreCLI@2
    displayName: Internal Restore ${{ parameters.Solution }}
    inputs:
      command: custom
      custom: restore
      arguments: >-
        $(Build.SourcesDirectory)\${{ parameters.Solution }}
        --configfile
        $(Build.SourcesDirectory)\NuGet.internal.Config
        /p:IncludeARM64=True
        -bl:"$(Build.ArtifactStagingDirectory)\logs\${{ parameters.BinLogCategory }}_Windows_arm64_$(Configuration)_Restore.binlog"
    condition: and(succeeded(), eq(variables['Platform'], 'ARM64'))
<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation. All rights reserved.
      -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    Signing properties and items for MicroBuild-based build definitions.
    http://devdiv/sites/des/bars/Shared%20Documents/OneNote/VS%20Eng%20BARS%20Documentation/MicroBuild.one
  -->

  <!-- Default metadata for all files to sign -->
  <ItemDefinitionGroup>
    <FilesToSign>
      <!-- Microsoft authenticode certificate for all file types -->
      <Authenticode Condition="'%(FilesToSign.Authenticode)' == ''">Microsoft</Authenticode>
    </FilesToSign>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup>
    <PublishedFilesToSign>
      <!-- Microsoft authenticode certificate for all file types -->
      <Authenticode Condition="'%(FilesToSign.Authenticode)' == ''">Microsoft</Authenticode>
    </PublishedFilesToSign>
  </ItemDefinitionGroup>

  <ItemGroup Condition="'$(Configuration)' == 'Release' and '$(CopyBuildOutputToOutputDirectory)' != 'false'">
    <!-- Automatically sign binary generated by the project that imports Signing.props -->
    <FilesToSign Condition="'$(TargetExt)' == '.dll' OR '$(TargetExt)' == '.exe'" Include="$(TargetPath)" />
    <PublishedFilesToSign Condition="'$(TargetExt)' == '.dll' OR '$(TargetExt)' == '.exe'" Include="$(PublishDir)\$(TargetFileName)" />
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)' == 'Release' and '$(GeneratePackageOnBuild)' != 'false'">
    <!-- Automatically sign nupkg generated by the project that imports Signing.props -->
    <FilesToSign Condition="'$(PackageId)'!=''" Include="$(OutputPath)$(PackageId).$(PackageVersion).nupkg">
      <Authenticode>NuGet</Authenticode>
    </FilesToSign>
  </ItemGroup>

  <ItemGroup>
    <!-- Have FilesToSign verification happen after NuGet pack if output is a NuGet package. -->
    <VerifyFilesToSignExistDependsOn Include="Pack" Condition=" '$(GeneratePackageOnBuild)' == 'true' ">
      <!-- Do not have this show up in Solution Explorer in VS -->
      <InProject>false</InProject>
    </VerifyFilesToSignExistDependsOn>
  </ItemGroup>
</Project>